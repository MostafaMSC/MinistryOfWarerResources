@page "/Jazaeam"
@using Microsoft.EntityFrameworkCore;
@using MinistryOfWarerResources.BackEnd.Interfaces;
@using MinistryOfWarerResources.Data;
@using MinistryOfWarerResources.Models;
@inject IJSRuntime _js
@inject IWebHostEnvironment _env
@inject ApplicationDbContext _db

@inject IJazaea _Dawa
@attribute [Authorize(Roles = "eatalaJazaea,admin,admin2")]

<div style="border:solid;padding:20px;border-color:lightblue;border-radius:20px;margin-left:20px ;margin-right:20px">
    <EditForm OnValidSubmit="SaveData" Model="DawaData">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row row-cols-lg-4 row-cols-md-3 row-cols-sm-2 row-cols-2">
            <div class="col">
                <MudSelect @bind-Value="@DawaData.SelectDawa" Label="اختر مقيم الدعوى من فضلك" Variant="Variant.Outlined">
                    <MudSelectItem Value="@("من قبل الوزارة")"> من قبل الوزارة </MudSelectItem>
                    <MudSelectItem Value="@("من قبل الغير")">من قبل الغير</MudSelectItem>
                    <MudSelectItem Value="@("طرف ثالث")">طرف ثالث</MudSelectItem>
                    <MudSelectItem Value="@("اخرى")">اخرى</MudSelectItem>

                </MudSelect>

            </div>
            <div class="col">

                <MudItem>
                    <MudTextField Label="رقم الدعوى" T="string" Variant="Variant.Outlined" @bind-Value="@DawaData.DawaNumber" />
                </MudItem>
            </div>
            <div class="col">
                <MudItem>
                    <MudTextField Label="اسم المشتكي" T="string" Variant="Variant.Outlined" @bind-Value="@DawaData.Name1" />
                </MudItem>

            </div>
            <div class="col">
                <MudItem>
                    <MudTextField Label="اسم المشكو منه " T="string" Variant="Variant.Outlined" @bind-Value="@DawaData.Name2" />
                </MudItem>

            </div>
        </div>


        <br />
        <div class="row row-cols-lg-4 row-cols-md-3 row-cols-sm-2 row-cols-2">
            
            <div class="col">
                <MudItem>
                    <MudTextField Label="موضوع الشكوى" T="string" Variant="Variant.Outlined" @bind-Value="@DawaData.DawaSubject" />
                </MudItem>
            </div>
            <div class="col">
                <MudSelect @bind-Value="@DawaData.Office" Label="اختر الدائرة" Variant="Variant.Outlined">
                    <MudSelectItem Value="@("مركز الوزارة")"> مركز الوزارة </MudSelectItem>
                    <MudSelectItem Value="@("الهيئة العامة للتشغيل والصيانة")">الهيئة العامة للتشغيل والصيانة</MudSelectItem>
                    <MudSelectItem Value="@(" المياه الجوفية")">المياه الجوفية </MudSelectItem>
                    <MudSelectItem Value="@("المصب العام")">المصب العام</MudSelectItem>

                </MudSelect>
            </div>
            <div class="col">
                <MudItem>
                    <MudTextField Label="المحكمة المختصة" T="string" Variant="Variant.Outlined" @bind-Value="@DawaData.Court" />
                </MudItem>
            </div>
            <div class="col">
                <MudItem>
                    <MudTextField Label="رقم القرار الجزائي" T="string" Variant="Variant.Outlined" @bind-Value="@DawaData.Decision1Num" />
                </MudItem>
            </div>
            
        </div>
        @* <div class="col">
        <label>Office</label>
        <select class="form-control" @onchange="FilterDepData">
        <option>Please Select Office</option>
        @foreach (var item in ListOfOffices)
        {
        <option value="@item.Id">@item.OfficeName</option>
        }
        </select>
        </div>
        <div class="col">
        <label>Department</label>
        <select class="form-control" @bind="EmpData.EmpDep">
        <option>Please Select Dept</option>
        @foreach (var item in ListOfFilteredDepts)
        {
        <option value="@item.Id">@item.DepName</option>
        }
        </select>
        </div> *@

        <br />
        <div class="row">
            
            <div class="col">
                <MudItem>
                    <MudTextField Label="اخر الاجراءات" T="string" Variant="Variant.Outlined" @bind-Value="@DawaData.AkherALajraaat" />
                </MudItem>
            </div>
            <div class="col">
                <MudItem>
                    <MudTextField Label="الملاحظات" T="string" Variant="Variant.Outlined" @bind-Value="@DawaData.Notes" />
                </MudItem>
            </div>
        </div>

        <br />


        <br />
        <div>
            <div class="col">
                <label>صورة القرار الجزائي</label>

                <InputFile accept=".png,.jpg,.jpeg,.pdf" class="form-control" style="background-color:transparent
" OnChange="CheckFile" />
            </div>
        </div>
        <br />
        <div>
            
        </div>
        <br />
        <div class="row">
            <div class="col">
                <MudItem>
                    <MudTextField Label="رقم قرار الاستئناف" T="int" Variant="Variant.Outlined" @bind-Value="@DawaData.AstanafNO" />
                </MudItem>

            </div>


            <div class="col">
                <MudItem>
                    <MudTextField Label="رقم قرار التمييزي" T="int" Variant="Variant.Outlined" @bind-Value="@DawaData.TameezNO" />
                </MudItem>

            </div>




            <div class="col">
                <MudItem>
                    <MudTextField Label="رقم قرار التصحيح" T="int" Variant="Variant.Outlined" @bind-Value="@DawaData.TashehNO" />
                </MudItem>

            </div>


        </div>

        @* <div class="col">
        <label>City</label>
        <select class="form-control" @bind="DawaData.City">
        <option>Emp City</option>
        <option value="Baghdad">Baghdad</option>
        <option value="Basra">Basra</option>
        <option value="Babel">Babel</option>
        <option value="Kut">Kut</option>
        </select>
        </div>
        <div class="col">
        <label>تاريخ التحديث</label>
        <input type="date" class="form-control" @bind-value="DawaData.LastUpdate" />
        </div> *@
        <br />
        <br />
        <div class="col">
            <MudItem>
                <MudTextField ReadOnly Label="تاريخ التحديث" T="DateTime" Value="DateTime.Now" Variant="Variant.Outlined" />
            </MudItem>

        </div>


        <br />
        <br />
        <br />
        <MudButton ButtonType="ButtonType.Submit" FullWidth Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" IconColor="Color.Secondary" Size="Size.Large">حفظ الدعوى</MudButton>
        <br />
        <br />

    </EditForm>
</div>


@*<div style="border:solid;padding:20px;background-color:whitesmoke;border-color:lightblue;border-radius:20px;">
    <EditForm OnValidSubmit="SaveData" Model="EmpData">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 row-cols-1">
            <div class="col">
                <label>Please Enter Full Name</label>
                <InputText  @bind-Value="EmpData.EmpFullName"  placeholder="Full Name" class="form-control" />
            </div>
            <div class="col">
                <label>Your Id Number</label>
                <input maxlength="14" min="14" @bind-value="@EmpData.EmpNumber" type="text" placeholder="Emp Id" class="form-control" />
            </div>
            <div class="col">
                <label>Your Age please </label>
                <input @bind-value="@EmpData.EmpAge" type="number" placeholder="Example.. 25 , 30 ,40....etc" class="form-control" />
            </div>
        </div>


        <br/>
        <div class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 row-cols-1">
            <div class="col">
                <label>Please Enter Your Salary</label>
                <input @bind-value="@EmpData.EmpSalary" type="number" class="form-control" />
            </div>

            <div class="col">
                <label>Office</label>
                <select class="form-control" @onchange="FilterDepData">
                    <option>Please Select Office</option>
                    @foreach (var item in ListOfOffices)
                    {
                        <option value="@item.Id">@item.OfficeName</option> // Bachelor Degree
                    }
                </select>
            </div>
            <div class="col">
                <label>Department</label>
                <select class="form-control" @bind="EmpData.EmpDep">
                    <option>Please Select Dept</option>
                    @foreach (var item in ListOfFilteredDepts)
                    {
                        <option value="@item.Id">@item.DepName</option>
                    }
                </select>
            </div>
        </div>
        <br/>
        <div class="row">
            <div class="col">
                <label>Status</label>
                <select class="form-control" @bind="EmpData.EmploymentStatus">
                    <option>Select Status</option>
                    <option value="Contract">Contract</option>
                    <option value="Perminant">Perminant</option>
                    <option value="Daily Wages">Daily Wages</option>
                    <option value="Space Man">Space Man</option>
                </select>
            </div>
             <div class="col">
                <label>City</label>
                <select class="form-control" @bind="EmpData.City">
                    <option>Emp City</option>
                    <option value="Baghdad">Baghdad</option>
                    <option value="Basra">Basra</option>
                    <option value="Babel">Babel</option>
                    <option value="Kut">Kut</option>
                </select>
            </div>
            <div class="col">
                <label>Date Of Employemnt</label>
                <input type="date" class="form-control" @bind-value="EmpData.DateOfEmployemnt" />
            </div>
        </div>

        <br/>
        <InputFile  accept=".png,.jpg,.jpeg" class="form-control" OnChange="CheckFile"  />

        <br/>
        <button class="btn btn-primary form-control">Save Emp</button>
    </EditForm>
</div>
*@





@code {

    public List<OfficeModel> ListOfOffices { get; set; } = new List<OfficeModel>();
    public EmpModel EmpData { get; set; } = new EmpModel();

    public InputFileChangeEventArgs UplaodedUserImage { get; set; }

    // public List<OfficeModel> ListOfOffices { get; set; } = new List<OfficeModel>();
    public JazaeaModule DawaData { get; set; } = new JazaeaModule();

    public InputFileChangeEventArgs UplaodedJazeaImage { get; set; }
    private async Task SaveData()
    {
        var UserResponse = await _js.InvokeAsync<bool>("confirm", "هل تود اضافة الدعوى الى النظام؟");
        if (UserResponse)
        {
            var CheckUserExists = await _Dawa.CheckIfDawaExistsInDB(DawaData.DawaNumber);
            if (CheckUserExists is true)
            {
                await _js.InvokeVoidAsync("alert", $"الدعوى : {DawaData.SelectDawa} موجودة في النظام مسبقاً");
            }
            else
            {
                DawaData.Decision1ImagePath = await UploadDawaImageToFileSystem();
                var BackEndResponse = await _Dawa.AddNewJzaeaToTheSystem(DawaData);

                await _js.InvokeVoidAsync("alert", BackEndResponse);
                DawaData = new JazaeaModule();

            }
        }
    }
    private async Task CheckFile(InputFileChangeEventArgs UploadedFile)
    {

        //.png,.jpg,.jpeg,.pdf
        if (UploadedFile.File.ContentType == "image/png" || UploadedFile.File.ContentType == "image/jpeg"
        || UploadedFile.File.ContentType == "image/pdf")
        {
            if (UploadedFile.File.Size > 2000000)
            {
                await _js.InvokeVoidAsync("alert", "يجب ان لا يزيد حجم الملف المرفق عن 5MB رجاءً");
            }
            else
            {
                await _js.InvokeVoidAsync("alert", "تم ارفاق الملف بنجاح");
                UplaodedJazeaImage = UploadedFile;
            }

        }
        else
        {
            await _js.InvokeVoidAsync("alert", "نوع الملف غير مطابق");
            return;
        }
    }
    private async Task<string> UploadDawaImageToFileSystem()
    {

        var FileName = DawaData.SelectDawa + "_" + Guid.NewGuid().ToString() + $"{UplaodedJazeaImage.File.Name}";
        var FolderPath = $"{_env.WebRootPath}\\JazaeaImages";
        var FullPath = Path.Combine(FolderPath, FileName);
        var MemoryStream = new MemoryStream();
        await UplaodedJazeaImage.File.OpenReadStream(5000000).CopyToAsync(MemoryStream);


        // FileMode : to give permission to the filestream to create files
        await using (var fs = new FileStream(FullPath, FileMode.Create, FileAccess.Write))
        {
            MemoryStream.WriteTo(fs);
        }

        return FullPath;
    }
    //protected override async Task OnInitializedAsync()
    //{
    //    //ListOfDepts = await _db.OfficeTable(a => a.OfficeTable).ToListAsync();
    //    EmpData.DateOfEmployemnt = DateTime.Now;
    //}
    //private void FilterDepData(ChangeEventArgs args)
    //{
    //    var Id = int.Parse(args.Value.ToString());
    //    ListOfFilteredDepts = ListOfDepts.Where(a => a.OfficeTableId == Id).ToList();
    //}
    private async Task<string> UploadUserImageToFileSystem()
    {

        var FileName = EmpData.EmpFullName + "_" + Guid.NewGuid().ToString() + $"{UplaodedUserImage.File.Name}";
        // MohammedAbdull_109273918628736127835gbegt675e
        var FolderPath = $"{_env.WebRootPath}\\JazaeaImages";
        // var FullPath = //server/wwwroot/EmpImages/FileName
        var FullPath = Path.Combine(FolderPath, FileName);

        var MemoryStream = new MemoryStream();
        await UplaodedUserImage.File.OpenReadStream(2000000).CopyToAsync(MemoryStream);

        // FileMode : to give permission to the filestream to create files
        await using (var fs = new FileStream(FullPath, FileMode.Create, FileAccess.Write))
        {
            MemoryStream.WriteTo(fs);
        }

        return $"JazaeaImages\\{FileName}";
    }
}