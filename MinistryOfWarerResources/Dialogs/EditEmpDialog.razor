@using MinistryOfWarerResources.ViewModels;
@inject IJSRuntime _js
@inject IWebHostEnvironment _env
@inject NavigationManager _navigationManager
@inject IDawa _Dawa
@inject ISnackbar _Sb

<div  style=" direction:rtl; border:solid;padding:20px; margin:20px;background-color:white;border-color:lightblue;border-radius:20px;">

    <EditForm Model="EmployeeViewModel" OnValidSubmit="EditData">
        <div class="row row-cols-lg-4 row-cols-md-3 row-cols-sm-2 row-col-2 " >
            <div class="col">
                <MudSelect @bind-Value="@EmployeeViewModel.SelectDawa" Label="اختر مقيم الدعوى من فضلك" Variant="Variant.Outlined">
                    <MudSelectItem Value="@("من قبل الوزارة")"> من قبل الوزارة </MudSelectItem>
                    <MudSelectItem Value="@("من قبل الغير")">من قبل الغير</MudSelectItem>
                    <MudSelectItem Value="@("طرف ثالث")">طرف ثالث</MudSelectItem>
                    <MudSelectItem Value="@("اخرى")">اخرى</MudSelectItem>

                </MudSelect>
                
            </div>
            <div class="col">
                
                <MudItem>
                    <MudTextField Label="رقم الدعوى" T="string" Variant="Variant.Outlined" @bind-Value="@EmployeeViewModel.DawaNumber" />
                </MudItem>
            </div>
            <div class="col">
                <MudItem>
                    <MudTextField Label="اسم المدعي" T="string" Variant="Variant.Outlined" @bind-Value="@EmployeeViewModel.Name1" />
                </MudItem>
                
            </div>
            <div class="col">
                <MudItem>
                    <MudTextField Label="اسم المدعي عليه" T="string" Variant="Variant.Outlined" @bind-Value="@EmployeeViewModel.Name2" />
                </MudItem>

            </div>
        
        </div>

        <br />
        <div class="row row-cols-lg-4 row-cols-md-3 row-cols-sm-2 row-cols-2">
            
            <div class="col">
                <MudItem>
                    <MudTextField Label="موضوع الدعوى" T="string" Variant="Variant.Outlined" @bind-Value="@EmployeeViewModel.DawaSubject" />
                </MudItem>
            </div>
            <div class="col">
                <MudSelect @bind-Value="@EmployeeViewModel.DawaType" Label="نوع الدعوى" Variant="Variant.Outlined">
                    <MudSelectItem Value="@("مدني")" > مدني </MudSelectItem>
                    <MudSelectItem Value="@("تجاري")">تجاري</MudSelectItem>
                    <MudSelectItem Value="@("قضاء موظفين")">قضاء موظفين</MudSelectItem>
                    <MudSelectItem Value="@("محكمة تحقيق")">محكمة تحقيق</MudSelectItem>

                </MudSelect>
    
            </div>
            <div class="col">
                <MudSelect @bind-Value="@EmployeeViewModel.Office" Label="اختر الدائرة" Variant="Variant.Outlined">
                    <MudSelectItem Value="@("مركز الوزارة")"> مركز الوزارة </MudSelectItem>
                    <MudSelectItem Value="@("الهيئة العامة للتشغيل والصيانة")">الهيئة العامة للتشغيل والصيانة</MudSelectItem>
                    <MudSelectItem Value="@(" المياه الجوفية")">المياه الجوفية</MudSelectItem>
                    <MudSelectItem Value="@("المصب العام")">المصب العام</MudSelectItem>

                </MudSelect>
            </div>
            <div class="col">
                <MudItem>
                    <MudTextField Label="المحكمة المختصة" T="string" Variant="Variant.Outlined" @bind-Value="@EmployeeViewModel.Court" />
                </MudItem>
            </div>
        </div>

        <br />
        <div class="row">
            
            <div class="col">
                <MudItem>
                    <MudTextField Label="رقم القرار البدائي" T="string" Variant="Variant.Outlined" @bind-Value="@EmployeeViewModel.Decision1Num" />
                </MudItem>
            </div>
            <div class="col">
                <MudItem>
                    <MudTextField Label="اخر الاجراءات" T="string" Variant="Variant.Outlined" @bind-Value="@EmployeeViewModel.AkherALajraaat" />
                </MudItem>
            </div>
        </div>

        <br />
        

        <br />
        <div>
            <div class="col">
                <MudItem>
                    <MudTextField Label="الملاحظات" T="string" Variant="Variant.Outlined" @bind-Value="@EmployeeViewModel.Notes" />
                </MudItem>
            </div>
        </div>
        <br />

        <div class="row row-cols-lg-2">
            <div class="col">
                <label>صورة القرار البدائي</label>

                <InputFile accept=".png,.jpg,.jpeg,.pdf" class="form-control" OnChange="CheckFile" />
            </div >
            <div class="col" style="text-align:center">
                <img style="height:80px; width:80px; border-radius:10%;" src="@EmployeeViewModel.Decision1ImagePath" alt="Decision1ImagePath" />
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <MudItem>
                    <MudTextField Label="رقم قرار الاستئناف" T="int" Variant="Variant.Outlined" @bind-Value="@EmployeeViewModel.AstanafNO" />
                </MudItem>

            </div>
                    
    
            <div class="col">
                <MudItem>
                    <MudTextField Label="رقم قرار التمييزي" T="int" Variant="Variant.Outlined" @bind-Value="@EmployeeViewModel.TameezNO" />
                </MudItem>

            </div>
            

        
        
            <div class="col">
                <MudItem>
                    <MudTextField Label="رقم قرار التصحيح" T="int" Variant="Variant.Outlined" @bind-Value="@EmployeeViewModel.TashehNO" />
                </MudItem>

            </div>
            

        </div>

        <div class="col">
            <MudItem>
                <MudTextField ReadOnly Label="تاريخ التحديث" T="DateTime" Value="DateTime.Now" Variant="Variant.Outlined"/>
            </MudItem>

        </div>



        <br />
        <MudButton ButtonType="ButtonType.Submit" @onclick='() => _navigationManager.NavigateTo("../AllDawas")' FullWidth Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" IconColor="Color.Success" Size="Size.Large">حفظ الدعوى </MudButton>
    </EditForm>
</div>


@code{


    [CascadingParameter] 
    MudDialogInstance MudDialog { get; set; }


    [Parameter]
    public int Id { get; set; }
    public InputFileChangeEventArgs UplaodedDawaImage { get; set; }

    public EmpViewModel EmployeeViewModel { get; set; } = new EmpViewModel();


    private async Task EditData()
    {
        if (UplaodedDawaImage is null)
        {
            var Response = await _Dawa.EditEmpViewModel(EmployeeViewModel);
            _Sb.Add(Response, Severity.Info);

        }
        else
        {
            var ImagePath = await UploadUserImageToFileSystem();
            if (ImagePath is null || ImagePath == "")
            {
                _Sb.Add("Please Reupload the image please", Severity.Warning);
            }
            else
            {
                var ImagePathToBeDeleted = $"{_env.WebRootPath}\\{EmployeeViewModel.Decision1ImagePath}";
                File.Delete(ImagePathToBeDeleted);
                EmployeeViewModel.Decision1ImagePath = ImagePath;
                var Response = await _Dawa.EditEmpViewModel(EmployeeViewModel);
                _Sb.Add(Response, Severity.Info);
            }
        }
    }


    protected override async Task OnInitializedAsync()
    {
        EmployeeViewModel = await _Dawa.GetEmpViewModelByUserId(Id);
    }


    private async Task<string> UploadUserImageToFileSystem()
    {

        var FileName = EmployeeViewModel.Name1 + "_" + Guid.NewGuid().ToString() + $"{UplaodedDawaImage.File.Name}";
        // MohammedAbdull_109273918628736127835gbegt675e
        var FolderPath = $"{_env.WebRootPath}\\DawaImages";
        // var FullPath = //server/wwwroot/EmpImages/FileName
        var FullPath = Path.Combine(FolderPath, FileName);

        var MemoryStream = new MemoryStream();
        await UplaodedDawaImage.File.OpenReadStream(2000000).CopyToAsync(MemoryStream);


        // FileMode : to give permission to the filestream to create files
        await using (var fs = new FileStream(FullPath, FileMode.Create, FileAccess.Write))
        {
            MemoryStream.WriteTo(fs);
        }

        return $"DawaImages\\{FileName}";
    }

    private async Task CheckFile(InputFileChangeEventArgs UploadedFile)
    {

        //.png,.jpg,.jpeg,.pdf
        if (UploadedFile.File.ContentType == "image/png" || UploadedFile.File.ContentType == "image/jpeg"
        || UploadedFile.File.ContentType == "image/pdf")
        {
            if (UploadedFile.File.Size > 2000000)
            {
                await _js.InvokeVoidAsync("alert", "يجب ان لا يزيد حجم الملف المرفق عن 5MB رجاءً");
            }
            else
            {
                await _js.InvokeVoidAsync("alert", "تم ارفاق الملف بنجاح");
                UplaodedDawaImage = UploadedFile;
            }

        }
        else
        {
            await _js.InvokeVoidAsync("alert", "نوع الملف غير مطابق");
            return;
        }
    }

}